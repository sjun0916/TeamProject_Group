<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="report">

	<select id="select" parameterType="UserVO" resultType="java.util.HashMap">
		select REPORT_NO,REG_TITLE,REG_DATE,REG_STATE,REG_REASON from REPORT where REG_ID=#{employeeNo}
		order by REPORT_NO desc
	</select>
	
	<select id="select2" parameterType="UserVO" resultType="java.util.HashMap">
		select REPORT_NO,REG_TITLE,REG_DATE,REG_STATE,REG_REASON from REPORT where REG_ID=#{employeeNo}
		AND REG_STATE != 3 
		AND ROWNUM &lt;= 3
		order by REPORT_NO desc
	</select>
	
	<select id="selectOne" parameterType="Integer" resultType="com.group.approve.vo.ReportVo">
		select * from REPORT where REPORT_NO=#{reportNo}
	</select>
	
	
	<select id="check" parameterType="UserVO" resultType="java.util.HashMap">
		SELECT REPORT_NO,REG_TITLE,REG_DATE,REG_STATE,REG_REASON from REPORT
	 		WHERE REPORT_NO IN
			(SELECT REPORT_NO from REPORT
			WHERE REPORT_NO IN(
			select REPORT_NO from REPORT
			WHERE REG_MANAGER1 =#{employeeNo}
    		and REG_UPDATE1 IS NULL
			)
			OR REPORT_NO IN(
			select REPORT_NO from REPORT
			WHERE REG_MANAGER2 =#{employeeNo}
			and REG_UPDATE1 is not null
    		and REG_UPDATE2 is null
			)
			or REPORT_NO IN(
			select REPORT_NO from REPORT
			where REG_MANAGER3 =#{employeeNo}
			and REG_UPDATE2 is not null
    		and REG_UPDATE2 is null
			)
			or REPORT_NO IN(
			select REPORT_NO from REPORT
			where REG_MANAGER4 =#{employeeNo}
			and REG_UPDATE3 is not null
    		and REG_UPDATE4 is null
			)or REPORT_NO IN(
			select REPORT_NO from REPORT
			where REG_MANAGER5 =#{employeeNo}
			and REG_UPDATE4 is not null
    		and REG_UPDATE5 is null
			)
	  	)
 		and REG_STATE !=0
  		and REG_STATE !=3
  		order by REPORT_NO desc
	</select>
	<select id="check2" parameterType="UserVO" resultType="int">
		SELECT COUNT(*) from REPORT
	 		WHERE REPORT_NO IN
			(SELECT REPORT_NO from REPORT
			WHERE REPORT_NO IN(
			select REPORT_NO from REPORT
			WHERE REG_MANAGER1 =#{employeeNo}
    		and REG_UPDATE1 IS NULL
			)
			OR REPORT_NO IN(
			select REPORT_NO from REPORT
			WHERE REG_MANAGER2 =#{employeeNo}
			and REG_UPDATE1 is not null
    		and REG_UPDATE2 is null
			)
			or REPORT_NO IN(
			select REPORT_NO from REPORT
			where REG_MANAGER3 =#{employeeNo}
			and REG_UPDATE2 is not null
    		and REG_UPDATE2 is null
			)
			or REPORT_NO IN(
			select REPORT_NO from REPORT
			where REG_MANAGER4 =#{employeeNo}
			and REG_UPDATE3 is not null
    		and REG_UPDATE4 is null
			)or REPORT_NO IN(
			select REPORT_NO from REPORT
			where REG_MANAGER5 =#{employeeNo}
			and REG_UPDATE4 is not null
    		and REG_UPDATE5 is null
			)
	  	)
 		and REG_STATE !=0
  		and REG_STATE !=3
  		
	</select>


	<insert id="insert" parameterType="com.group.approve.vo.ReportVo">
		insert into REPORT (
		REPORT_NO,
		REG_ID,
		REG_DEP,
		REG_MANAGER1,
		REG_MANAGER2,
		REG_MANAGER3,
		REG_MANAGER4,
		REG_MANAGER5,
		REG_TITLE,
		REG_CONT,
		REG_STATE,
		REG_DATE,
		REG_TYPE,
		REG_COMMENT
		) VALUES (
		REPORT_SEQ.NEXTVAL,
		#{regId},
		#{regDep},
		#{regManager1},
		#{regManager2,jdbcType=INTEGER},
		#{regManager3,jdbcType=INTEGER},
		#{regManager4,jdbcType=INTEGER},
		#{regManager5,jdbcType=INTEGER},
		#{regTitle},
		#{regCont},
		#{regState},
		SYSDATE,
		#{regType,jdbcType=VARCHAR},
		#{regComment,jdbcType=VARCHAR}
		)
	</insert>
	
	
	<update id="updateReport" parameterType="com.group.approve.vo.ReportVo">
		UPDATE REPORT
		<choose>
		<when test="regUpdate1 == null">
		set REG_UPDATE1 =SYSDATE
		<choose>
		<when test="regManager2 != 0">
		,REG_STATE=2
		</when>
		<when test="regManager2 == 0">
		,REG_STATE=3
		</when>
		</choose>
		</when>
		<when test="regUpdate2 == null">
		set REG_UPDATE2 =SYSDATE
		<choose>
		<when test="regManager3 != 0">
		,REG_STATE=2
		</when>
		<when test="regManager3 == 0">
		,REG_STATE=3
		</when>
		</choose>
		</when>
		<when test="regUpdate3 == null">
		set REG_UPDATE3 =SYSDATE
		<choose>
		<when test="regManager4 != 0">
		,REG_STATE=2
		</when>
		<when test="regManager4 == 0">
		,REG_STATE=3
		</when>
		</choose>
		</when>
		<when test="regUpdate4 == null">
		set REG_UPDATE4 =SYSDATE
		<choose>
		<when test="regManager5 != 0">
		,REG_STATE=2
		</when>
		<when test="regManager5 == 0">
		,REG_STATE=3
		</when>
		</choose>
		</when>
		<when test="regUpdate5 == null">
		set REG_UPDATE5 =SYSDATE
		,REG_STATE=3
		</when>
		</choose>
		where REPORT_NO=#{reportNo}
	</update>
	
	
	<update id="backReport" parameterType="com.group.approve.vo.ReportVo">
		update REPORT set
		REG_REASON=#{regReason,jdbcType=VARCHAR},REG_STATE=0
		where REPORT_NO=#{reportNo,jdbcType=VARCHAR}
	</update>
	
	
	<select id="surch" parameterType="hashmap" resultType="com.group.approve.vo.ReportVo">
			select * from
			(select * from
			(select REG_DATE
						  ,REG_ID
						  ,REG_TITLE
						  ,REPORT_NO
						  ,REG_STATE
			from REPORT
			where REG_ID != #{sessionid,jdbcType=VARCHAR}) 
			where
			     REPORT_NO like '%'||#{keyword,jdbcType=VARCHAR}||'%'
					or REG_ID like '%'||#{keyword,jdbcType=VARCHAR}||'%'
					or REG_TITLE like '%'||#{keyword,jdbcType=VARCHAR}||'%')
			    where REG_STATE =0 or REG_STATE =3
	</select>
	
	
	<select id="waitCont" parameterType="int" resultType="int">
		select count(*) 
		from REPORT
		where REG_ID=#{id} 
		and REPORT_NO
		in(select REPORT_NO
		from REPORT
		where REG_STATE = '1'
		or REG_STATE='2')
	</select>
	
	
	<select id="endCont" parameterType="int" resultType="int">
		select count(*) 
		from REPORT
		where REG_ID=#{id} 
		and REPORT_NO
		in(select REPORT_NO
		from REPORT 
		where REG_STATE = '3')
	</select>
	
	
	<select id="backCont" parameterType="int" resultType="int">
		select count(*) 
		from REPORT
		where REG_ID=#{id} 
		and REPORT_NO 
		in(select REPORT_NO
		from REPORT 
		where REG_STATE = '0')
	</select>
	

</mapper>